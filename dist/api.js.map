{"version":3,"sources":["../src/api.js"],"names":["app","APP_PORT","process","env","PORT","APP_HOST","use","json","static","join","__dirname","get","req","res","setHeader","send","config","email","password","email_to","gToken","S1_SECRET","gUsername","git_username","gReponame","git_reponame","date","Date","CronJob","job","cronTime","onTick","post","then","data","console","log","catch","start","timeZone","listen"],"mappings":";;;;;;AAAA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,MAAM,wBAAZ;AACA,IAAMC,WAAWC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAArC;AACA,IAAMC,WAAWH,QAAQC,GAAR,CAAYE,QAAZ,IAAwB,WAAzC;;AAEAL,IAAIM,GAAJ,CAAQ,qBAAR;AACAN,IAAIM,GAAJ,CAAQ,uBAAR;AACAN,IAAIM,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAN,IAAIM,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACAP,IAAIM,GAAJ,CAAQ,kBAAQE,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAAf,CAAR;AACAV,IAAIM,GAAJ,CAAQ,MAAR;;AAEA;AACAN,IAAIW,GAAJ,CAAQ,eAAR,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACtCA,KAAIC,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACAD,KAAIE,IAAJ;AACA,CAHD;;AAKAf,IAAIW,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1B,KAAMG,SAAS;AACdC,SAAOf,QAAQC,GAAR,CAAYc,KADL;AAEdC,YAAUhB,QAAQC,GAAR,CAAYe,QAFR;AAGdC,YAAUjB,QAAQC,GAAR,CAAYgB,QAHR;AAIdC,UAAQlB,QAAQC,GAAR,CAAYkB,SAJN;AAKdC,aAAWpB,QAAQC,GAAR,CAAYoB,YALT;AAMdC,aAAWtB,QAAQC,GAAR,CAAYsB,YANT;AAOdC,QAAM,IAAIC,IAAJ;AAPQ,EAAf;AASA,KAAIC,UAAU,eAAKA,OAAnB;AACA,KAAIC,MAAM,IAAID,OAAJ,CAAY;AACrBE,YAAU,gBADW,EACO;AAC5BC,UAAQ,kBAAM;AACb,mBAAMC,IAAN,CAAW,+CAAX,EACC;AACC,gBAAY,UAAKhB,MAAL,CAAYM,SADzB;AAEC,gBAAY,UAAKN,MAAL,CAAYQ,SAFzB;AAGC,aAAS,UAAKR,MAAL,CAAYI,MAHtB;AAIC,YAAQ,UAAKJ,MAAL,CAAYU;AAJrB,IADD,EAOEO,IAPF,CAOO,UAACC,IAAD,EAAU;AAChB,iCAAU,UAAKlB,MAAf,EAAuBkB,KAAKA,IAA5B,EAAkC,UAACA,IAAD,EAAU;AAAEC,aAAQC,GAAR,CAAY,gBAAgBF,IAA5B;AAAoC,KAAlF;AACA,IATD,EASGG,KATH,CASS,UAACH,IAAD,EAAU;AAClB,iCAAU,UAAKlB,MAAf,EAAuBkB,IAAvB;AACA,IAXD;AAYA,GAfoB;AAgBrBI,SAAO,KAhBc;AAiBrBC,YAAU;AAjBW,EAAZ,CAAV;AAmBAV,KAAIb,MAAJ,GAAaA,MAAb;AACAa,KAAIS,KAAJ;;AAEAzB,KAAIE,IAAJ,CAAS,kHAAT;AACA,CAlCD;;AAoCAf,IAAIwC,MAAJ,CAAWvC,QAAX,EAAqB,YAAM;AAC1B,kBAAOmC,GAAP,CACC,MADD,EAEC,uBAAuB/B,QAAvB,GAAkC,GAAlC,GAAwCJ,QAFzC;AAIA,CALD;;kBAOeD,G","file":"api.js","sourcesContent":["import 'babel-polyfill';\n\nimport cors from 'cors';\nimport cron from 'cron';\nimport path from 'path';\nimport axios from 'axios';\nimport helmet from 'helmet';\nimport morgan from 'morgan';\nimport routes from './routes';\nimport express from 'express';\nimport logger from './utils/logger';\nimport bodyParser from 'body-parser';\nimport swaggerSpec from './utils/swagger';\nimport { sendEmail } from './utils/emailService';\n\nconst app = express();\nconst APP_PORT = process.env.PORT || 3000;\nconst APP_HOST = process.env.APP_HOST || 'localhost';\n\napp.use(cors());\napp.use(helmet());\napp.use(morgan('dev'));\napp.use(bodyParser.json());\napp.use(express.static(path.join(__dirname, '/../public')));\napp.use('/api', routes);\n\n// serve swagger\napp.get('/swagger.json', (req, res) => {\n\tres.setHeader('Content-Type', 'application/json');\n\tres.send(swaggerSpec);\n});\n\napp.get('/', (req, res) => {\n\tconst config = {\n\t\temail: process.env.email,\n\t\tpassword: process.env.password,\n\t\temail_to: process.env.email_to,\n\t\tgToken: process.env.S1_SECRET,\n\t\tgUsername: process.env.git_username,\n\t\tgReponame: process.env.git_reponame,\n\t\tdate: new Date()\n\t};\n\tlet CronJob = cron.CronJob;\n\tlet job = new CronJob({\n\t\tcronTime: '05 56 17 * * *', //Send Email at 5.30 every day\n\t\tonTick: () => {\n\t\t\taxios.post('https://psrgenerator.herokuapp.com/api/status',\n\t\t\t\t{\n\t\t\t\t\t\"username\": this.config.gUsername,\n\t\t\t\t\t\"reponame\": this.config.gReponame,\n\t\t\t\t\t\"token\": this.config.gToken,\n\t\t\t\t\t\"date\": this.config.date\n\t\t\t\t}\n\t\t\t).then((data) => {\n\t\t\t\tsendEmail(this.config, data.data, (data) => { console.log(\"Email Sent \" + data); });\n\t\t\t}).catch((data) => {\n\t\t\t\tsendEmail(this.config, data);\n\t\t\t});\n\t\t},\n\t\tstart: false,\n\t\ttimeZone: 'Asia/Kathmandu'\n\t});\n\tjob.config = config;\n\tjob.start();\n\n\tres.send('<h1>Started...</h1><br><a href=\"https://psrgenerator.herokuapp.com/api-docs\" target=\"_blank\"> Documentation </a>');\n});\n\napp.listen(APP_PORT, () => {\n\tlogger.log(\n\t\t'info',\n\t\t'Server started at ' + APP_HOST + ':' + APP_PORT\n\t);\n});\n\nexport default app;"]}