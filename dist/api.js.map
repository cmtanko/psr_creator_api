{"version":3,"sources":["../src/api.js"],"names":["app","port","process","env","PORT","use","json","static","join","__dirname","get","req","res","config","email","password","email_to","gToken","S1_SECRET","gUsername","git_username","gReponame","git_reponame","date","Date","CronJob","job","cronTime","onTick","post","then","data","console","log","catch","start","timeZone","send","listen"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;;;;;AAFA;AAIA,IAAMA,MAAM,wBAAZ;AACA,IAAIC,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B;AACAJ,IAAIK,GAAJ,CAAQ,qBAAR;AACAL,IAAIK,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACAN,IAAIK,GAAJ,CAAQ,MAAR;AACAL,IAAIK,GAAJ,CAAQ,kBAAQE,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAAf,CAAR;AACAT,IAAIU,GAAJ,CAAQ,GAAR,EAAa,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC7B,QAAMC,SAAS;AACXC,eAAOZ,QAAQC,GAAR,CAAYW,KADR;AAEXC,kBAAUb,QAAQC,GAAR,CAAYY,QAFX;AAGXC,kBAAUd,QAAQC,GAAR,CAAYa,QAHX;AAIXC,gBAAQf,QAAQC,GAAR,CAAYe,SAJT;AAKXC,mBAAWjB,QAAQC,GAAR,CAAYiB,YALZ;AAMXC,mBAAWnB,QAAQC,GAAR,CAAYmB,YANZ;AAOXC,cAAM,IAAIC,IAAJ;AAPK,KAAf;AASA,QAAIC,UAAU,eAAKA,OAAnB;AACA,QAAIC,MAAM,IAAID,OAAJ,CAAY;AAClBE,kBAAU,gBADQ,EACU;AAC5BC,gBAAQ,kBAAY;AAAA;;AAChB,4BAAMC,IAAN,CAAW,+CAAX,EACI;AACI,4BAAY,KAAKhB,MAAL,CAAYM,SAD5B;AAEI,4BAAY,KAAKN,MAAL,CAAYQ,SAF5B;AAGI,yBAAS,KAAKR,MAAL,CAAYI,MAHzB;AAII,wBAAQ,KAAKJ,MAAL,CAAYU;AAJxB,aADJ,EAOEO,IAPF,CAOO,UAACC,IAAD,EAAU;AACb,6CAAU,MAAKlB,MAAf,EAAuBkB,KAAKA,IAA5B,EAAkC,UAACA,IAAD,EAAU;AAAEC,4BAAQC,GAAR,CAAY,gBAAgBF,IAA5B;AAAoC,iBAAlF;AACH,aATD,EASGG,KATH,CASS,UAACH,IAAD,EAAU;AACf,6CAAU,MAAKlB,MAAf,EAAuBkB,IAAvB;AACH,aAXD;AAYH,SAfiB;AAgBlBI,eAAO,KAhBW;AAiBlBC,kBAAU;AAjBQ,KAAZ,CAAV;AAmBAV,QAAIb,MAAJ,GAAaA,MAAb;AACAa,QAAIS,KAAJ;;AAEAvB,QAAIyB,IAAJ,CAAS,eAAT;AAEH,CAnCD;AAoCArC,IAAIsC,MAAJ,CAAWrC,IAAX,EAAiB,YAAY;AACzB+B,YAAQC,GAAR,CAAY,kBAAZ,EAAgChC,IAAhC;AACH,CAFD;;kBAIeD,G","file":"api.js","sourcesContent":["import 'babel-polyfill';\nimport cors from 'cors';\nimport path from 'path';\nimport routes from './routes';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport cron from 'cron';\n//import config from './config';\nimport { sendEmail } from './report/emailService';\nimport axios from 'axios';\n\nconst app = express();\nvar port = process.env.PORT || 3000;\napp.use(cors());\napp.use(bodyParser.json());\napp.use('/api', routes);\napp.use(express.static(path.join(__dirname, '/../public')));\napp.get('/', function (req, res) {\n    const config = {\n        email: process.env.email,\n        password: process.env.password,\n        email_to: process.env.email_to,\n        gToken: process.env.S1_SECRET,\n        gUsername: process.env.git_username,\n        gReponame: process.env.git_reponame,\n        date: new Date()\n    }\n    let CronJob = cron.CronJob;\n    let job = new CronJob({\n        cronTime: '05 56 17 * * *', //Send Email at 5.30 every day\n        onTick: function () {\n            axios.post('https://psrgenerator.herokuapp.com/api/status',\n                {\n                    \"username\": this.config.gUsername,\n                    \"reponame\": this.config.gReponame,\n                    \"token\": this.config.gToken,\n                    \"date\": this.config.date\n                }\n            ).then((data) => {\n                sendEmail(this.config, data.data, (data) => { console.log(\"Email Sent \" + data); });\n            }).catch((data) => {\n                sendEmail(this.config, data);\n            });\n        },\n        start: false,\n        timeZone: 'Asia/Kathmandu'\n    });\n    job.config = config;\n    job.start();\n\n    res.send('Started...123');\n\n});\napp.listen(port, function () {\n    console.log('app listening on', port);\n})\n\nexport default app;"]}