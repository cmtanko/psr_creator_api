{"version":3,"sources":["../../src/utils/logger.js"],"names":["tsFormat","Date","toISOString","logDir","process","env","LOGGING_DIR","logLevel","LOGGING_LEVEL","existsSync","mkdirSync","logger","Logger","transports","Console","timestamp","colorize","level","DailyRotateFile","filename","datePattern","prepend"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,WAAW,SAAXA,QAAW;AAAA,QAAM,IAAIC,IAAJ,GAAWC,WAAX,EAAN;AAAA,CAAjB;AACA,IAAMC,SAASC,QAAQC,GAAR,CAAYC,WAAZ,IAA2B,MAA1C;AACA,IAAMC,WAAWH,QAAQC,GAAR,CAAYG,aAAZ,IAA6B,MAA9C;;AAEA;AACA,IAAI,CAAC,aAAGC,UAAH,CAAcN,MAAd,CAAL,EAA4B;AAC3B,cAAGO,SAAH,CAAaP,MAAb;AACA;;AAED;;;AAGA,IAAMQ,SAAS,IAAI,kBAAQC,MAAZ,CAAmB;AACjCC,aAAY,CACX,IAAI,kBAAQA,UAAR,CAAmBC,OAAvB,CAA+B;AAC9BC,aAAWf,QADmB;AAE9BgB,YAAU,IAFoB;AAG9BC,SAAOV;AAHuB,EAA/B,CADW,EAMX,IAAI,kBAAQM,UAAR,CAAmBK,eAAvB,CAAuC;AACtCC,YAAahB,MAAb,gBADsC;AAEtCY,aAAWf,QAF2B;AAGtCoB,eAAa,YAHyB;AAItCC,WAAS,IAJ6B;AAKtCJ,SAAOV;AAL+B,EAAvC,CANW;AADqB,CAAnB,CAAf;;kBAiBeI,M","file":"logger.js","sourcesContent":["import fs from 'fs';\nimport winston from 'winston';\nimport 'winston-daily-rotate-file';\n\nconst tsFormat = () => new Date().toISOString();\nconst logDir = process.env.LOGGING_DIR || 'logs';\nconst logLevel = process.env.LOGGING_LEVEL || 'info';\n\n// Create log directory if it does not exist\nif (!fs.existsSync(logDir)) {\n\tfs.mkdirSync(logDir);\n}\n\n/**\n * Create new winston logger instance.\n */\nconst logger = new winston.Logger({\n\ttransports: [\n\t\tnew winston.transports.Console({\n\t\t\ttimestamp: tsFormat,\n\t\t\tcolorize: true,\n\t\t\tlevel: logLevel\n\t\t}),\n\t\tnew winston.transports.DailyRotateFile({\n\t\t\tfilename: `${logDir}/-debug.log`,\n\t\t\ttimestamp: tsFormat,\n\t\t\tdatePattern: 'yyyy-MM-dd',\n\t\t\tprepend: true,\n\t\t\tlevel: logLevel\n\t\t})\n\t]\n});\n\nexport default logger;\n"]}